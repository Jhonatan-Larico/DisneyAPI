// <auto-generated />
using System;
using Disney.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Disney.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230523194329_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CharacterMovieOrSerie", b =>
                {
                    b.Property<Guid>("CharactersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MoviesOrSeriesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CharactersId", "MoviesOrSeriesId");

                    b.HasIndex("MoviesOrSeriesId");

                    b.ToTable("MovieOrSerieCharacter", (string)null);
                });

            modelBuilder.Entity("Disney.API.Domain.Entities.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Story")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<float?>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Character");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3421a07c-1d07-453b-b735-40b4dc875d0c"),
                            Age = 92,
                            ImageUrl = "https://example.com/mickey-mouse.jpg",
                            Name = "Mickey Mouse",
                            Story = "Mickey Mouse is the iconic and beloved character in Disney's cartoons.",
                            Weight = 23.5f
                        },
                        new
                        {
                            Id = new Guid("6d4fdbe4-d953-43c5-ac6c-a43a74482c94"),
                            Age = 92,
                            ImageUrl = "https://example.com/minnie.jpg",
                            Name = "Minnie Mouse",
                            Story = "Minnie Mouse is Mickey Mouse's girlfriend and one of Disney's iconic characters.",
                            Weight = 21.4f
                        });
                });

            modelBuilder.Entity("Disney.API.Domain.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4cc707f6-f10e-461c-b2fe-d0c44d1c658a"),
                            ImageUrl = "https://example.com/animation.jpg",
                            Name = "Animation"
                        },
                        new
                        {
                            Id = new Guid("fa35ff16-bcd6-48f9-a26c-cc257576457c"),
                            ImageUrl = "https://example.com/fantasy.jpg",
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = new Guid("3780d224-cc9d-4b1f-8541-483ac44591b6"),
                            ImageUrl = "https://example.com/family.jpg",
                            Name = "Family"
                        },
                        new
                        {
                            Id = new Guid("5bc6fb2d-ef3a-4934-b67f-948b201cf01d"),
                            ImageUrl = "https://example.com/holiday.jpg",
                            Name = "Holiday"
                        });
                });

            modelBuilder.Entity("Disney.API.Domain.Entities.MovieOrSerie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("MoviesOrSerie");

                    b.HasData(
                        new
                        {
                            Id = new Guid("475534e5-1f63-4465-ac6e-e8af62d358a6"),
                            CreationDate = new DateTime(1928, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = new Guid("4cc707f6-f10e-461c-b2fe-d0c44d1c658a"),
                            ImageUrl = "https://example.com/steamboat-willie.jpg",
                            Rating = 8,
                            Title = "Steamboat Willie"
                        },
                        new
                        {
                            Id = new Guid("0812acb8-b71e-4794-acdd-6367b157597d"),
                            CreationDate = new DateTime(1940, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = new Guid("fa35ff16-bcd6-48f9-a26c-cc257576457c"),
                            ImageUrl = "https://example.com/fantasia.jpg",
                            Rating = 7,
                            Title = "Fantasia"
                        },
                        new
                        {
                            Id = new Guid("bf843eeb-0758-46bb-aebc-065dd9fd8d48"),
                            CreationDate = new DateTime(1955, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = new Guid("3780d224-cc9d-4b1f-8541-483ac44591b6"),
                            ImageUrl = "https://example.com/mickey-mouse-club.jpg",
                            Rating = 6,
                            Title = "The Mickey Mouse Club"
                        },
                        new
                        {
                            Id = new Guid("2ad3373e-74b3-4565-a7c4-a78b3400280f"),
                            CreationDate = new DateTime(1999, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = new Guid("5bc6fb2d-ef3a-4934-b67f-948b201cf01d"),
                            ImageUrl = "https://example.com/mickeys-once-upon-a-christmas.jpg",
                            Rating = 7,
                            Title = "Mickey's Once Upon a Christmas"
                        });
                });

            modelBuilder.Entity("CharacterMovieOrSerie", b =>
                {
                    b.HasOne("Disney.API.Domain.Entities.Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Disney.API.Domain.Entities.MovieOrSerie", null)
                        .WithMany()
                        .HasForeignKey("MoviesOrSeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Disney.API.Domain.Entities.MovieOrSerie", b =>
                {
                    b.HasOne("Disney.API.Domain.Entities.Genre", "Genre")
                        .WithMany("MoviesOrSeries")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Disney.API.Domain.Entities.Genre", b =>
                {
                    b.Navigation("MoviesOrSeries");
                });
#pragma warning restore 612, 618
        }
    }
}
